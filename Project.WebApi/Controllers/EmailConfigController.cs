//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//     生成时间 05/06/2019 13:27:04 By 朱峰
//     对此文件的更改可能会导致不正确的行为，并且如果
//     文件已存在，不会覆盖。
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using AutoMapper;
using Microsoft.AspNetCore.Mvc;
using Project.Core.Utility;
using Project.IBLL;
using Project.Model;
using Project.Model.Conditions;
using Project.Model.Dtos;
using Project.WebApi.Filters;
using Microsoft.AspNetCore.Cors;

namespace Project.WebApi.Controllers
{
    [Produces("application/json")]
    [Route("api/emailconfig")]
    [EnableCors("any")]
    public class EmailConfigController : Controller
    {
        private readonly IEmailConfigService _emailConfigService;

        public EmailConfigController(IEmailConfigService emailConfigService)
        {
            _emailConfigService = emailConfigService;
        }

        /// <summary>
        ///     根据id获取
        /// </summary>
        /// <param name="id">主键</param>
        /// <returns></returns>
        [HttpGet("{id}")]
        public IActionResult GetByPk(int id)
        {
            var model = _emailConfigService.GetByPk(id);
            return Ok(Mapper.Map<EmailConfigDto>(model));
        }

        /// <summary>
        ///     添加EmailConfig
        /// </summary>
        /// <param name="emailConfigDto">实体</param>
        /// <returns></returns>
        [HttpPost("")]
        [Validate]
        public IActionResult Insert([FromBody] EmailConfigDto emailConfigDto)
        {
            var emailConfig = Mapper.Map<EmailConfig>(emailConfigDto);
            return Ok(_emailConfigService.Insert(emailConfig));
        }

        /// <summary>
        ///     更新EmailConfig
        /// </summary>
        /// <param name="id">主键</param>
        /// <param name="emailConfigDto">实体</param>
        /// <returns></returns>
        [HttpPut("{id}")]
        [Validate]
        public IActionResult Update(int id, [FromBody] EmailConfigDto emailConfigDto)
        {
            var model = Mapper.Map<EmailConfig>(emailConfigDto);
            var result = _emailConfigService.Update(model);
            return Ok();
        }

        /// <summary>
        ///     逻辑删除emailConfig
        /// </summary>
        /// <param name="id">主键Id</param>
        /// <returns></returns>
        [HttpDelete("{id}")]
        public IActionResult Delete(int id)
        {
            var result = _emailConfigService.SoftDelete(id);
            return Ok();
        }

        /// <summary>
        /// 分页查询
        /// </summary>
        /// <param name="pi"></param>
        /// <param name="ps"></param>
        /// <param name="condition"></param>
        [HttpGet("get_by_page")]
        public IActionResult GetByPage(int pi, int ps, EmailConfigCondition condition = null)
        {
            var result = _emailConfigService.GetByPage(pi, ps, null, condition);
            return Ok(new
            {
                Total = result.Total,
                List = Mapper.Map<List<EmailConfigDto>>(result.Data)
            });
        }
    }
}
